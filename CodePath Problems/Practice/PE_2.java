import java.time.Year;

/*Source: https://projecteuler.net/problem=2
* Author: Giancarlo Garcia Deleon
* Problem: Even Fibonacci numbers - Problem 2
* Description: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

public class PE_2 {
    public static void main(String [] args){
        // UNDERSTAND - Find fibonnaci sum of 4,000,000 ONLY adding to the sum even numbers
        // Max = 10, Sum = 2 + 8 = 10 
        // MATCH - Basic Fibonnacci
        // PLAN - 1. Write the Fibonnaci Sequence until 4,000,000 2. On even numbers, we add to a sum
        // IMPLEMENT
        int max = 4000000;
        int sum = 1;
        int prev = 1;
        int newsum = 0;
        int independentSum = 0;

        for (int i = 1; i < max; i++) {
            newsum = prev + sum;
            sum = prev;
            prev = newsum;
            // System.out.println(newsum);
            if (newsum % 2 == 0){
                //System.out.println(newsum);
                independentSum += newsum;
                // System.out.println(independenetSum);
            }
        }
        System.out.println(independentSum);
        // REVIEW
        // EVALUATE
    }    
}
